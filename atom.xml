<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AnubisYe</title>
  
  <subtitle>blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-02T13:27:27.221Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>AnubisYe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从今天起开始学习C++ Primer</title>
    <link href="http://yoursite.com/2017/07/02/%E4%BB%8E%E4%BB%8A%E5%A4%A9%E8%B5%B7%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0C-Primer/"/>
    <id>http://yoursite.com/2017/07/02/从今天起开始学习C-Primer/</id>
    <published>2017-07-02T12:54:07.000Z</published>
    <updated>2017-07-02T13:27:27.221Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="C++ Primer" scheme="http://yoursite.com/tags/C-Primer/"/>
    
      <category term="c语言" scheme="http://yoursite.com/tags/c%E8%AF%AD%E8%A8%80/"/>
    
      <category term="学习" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/06/28/hello-world/"/>
    <id>http://yoursite.com/2017/06/28/hello-world/</id>
    <published>2017-06-28T08:13:32.233Z</published>
    <updated>2017-06-28T08:13:32.233Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>网易云</title>
    <link href="http://yoursite.com/2017/05/18/%E7%BD%91%E6%98%93%E4%BA%91/"/>
    <id>http://yoursite.com/2017/05/18/网易云/</id>
    <published>2017-05-18T02:04:28.000Z</published>
    <updated>2017-05-18T02:05:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is the life</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is the life&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="http://yoursite.com/2017/04/08/git%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/04/08/git命令/</id>
    <published>2017-04-08T15:39:10.000Z</published>
    <updated>2017-04-08T15:41:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GIT-COMMAND"><a href="#GIT-COMMAND" class="headerlink" title="GIT COMMAND"></a>GIT COMMAND</h1><blockquote><p>本文转自<a href="https://github.com/lzjun567/note/tree/master/note" target="_blank" rel="external">https://github.com/lzjun567/note/tree/master/note</a></p></blockquote><p>[TOC]</p><h1 id="Git常用命令备忘"><a href="#Git常用命令备忘" class="headerlink" title="Git常用命令备忘"></a>Git常用命令备忘</h1><hr><p>Git已经成为程序员日常工具之一，那些Git基本的命令，每天都要用得命令你都记住了吗？如果还没的话，笔者整理了一份清单，以备不时之需所用。</p><h4 id="三个基本概念"><a href="#三个基本概念" class="headerlink" title="三个基本概念"></a>三个基本概念</h4><ol><li>工作区(Workspace)是计算机中项目的根目录</li><li>暂存区(Index)像个缓存区域，临时保存你的改动</li><li>版本库(Repository)分为本地仓库（Local)和远程仓库(Remote)</li></ol><p>几乎所有常用命令就是围绕这几个概念来操作的，一图胜千言，下面是一张比较简单的图，包括了最基本的命令</p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png" alt="simple"></p><p>但只会使用以上命令是不够的，在这个复杂纷繁的程序世界，事情没你想的那么简单，不过有些事情想想就够了，不一定要去做，真要去做你也做不来，比如自己写个git来，但是，更多地的了解git是我们每个程序员都可以做得到的事。再看下图：<br><img src="http://ww4.sinaimg.cn/mw690/81b78497jw1eqnk1bkyaij20e40bpjsm.jpg" alt="advance"></p><p>下面的命令结合上面两张图来理解、练习、记忆效果更加。暂时用不着的命令记不住，不理解也没关系，哪天遇到问题，再来找找有没有合适的方法也不迟。</p><h4 id="新建-克隆代码库"><a href="#新建-克隆代码库" class="headerlink" title="新建/克隆代码库"></a>新建/克隆代码库</h4><pre><code>$ git init                                          #当前目录新建一个Git代码库$ git init [project-name]                             #新建一个目录，将其初始化为Git代码库$ git clone [url]                                     #下载一个项目和它的整个代码历史$ git fetch [url]                                     #下载/同步项目到</code></pre><h4 id="添加-删除文件"><a href="#添加-删除文件" class="headerlink" title="添加/删除文件"></a>添加/删除文件</h4><pre><code>$ git add [file1] [file2] ...                       # 添加指定文件到暂存区$ git add [dir]                                     # 添加指定目录到暂存区，包括子目录$ git add .                                           # 添加当前目录的所有文件到暂存区$ git rm [file1] [file2] ...                       # 删除工作区文件，并且将这次删除放入暂存区$ git rm --cached [file]                           # 停止追踪指定文件，但该文件会保留在工作区$ git mv [file-original] [file-renamed]              # 改名文件，并且将这个改名放入暂存区</code></pre><h4 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h4><pre><code>$ git commit -m [message]                          # 提交暂存区所有文件到仓库区，并指定提交说明$ git commit [file1] [file2] ... -m [message]       # 提交暂存区的指定文件到仓库区，并指定提交说明$ git commit -a   # 提交工作区自上次commit之后的变化，直接到仓库区。是git add 和 git commit的组合操作$ git commit -v                                      # 提交时显示所有diff信息$ git commit --amend -m [message]                   # 使用一次新的commit，替代上一次提交</code></pre><h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h4><pre><code>$ git branch                                       # 列出所有本地分支$ git branch -r                                    # 列出所有远程分支$ git branch -a                                     # 列出所有本地分支和远程分支$ git branch [branch-name]                          # 新建一个分支，但依然停留在当前分支$ git checkout -b [branch]                          # 新建一个分支，并切换到该分支$ git branch [branch] [commit]                      # 新建一个分支，指向指定commit$ git checkout [branch-name]                          # 切换到指定分支$ git merge [branch]                                  # 合并指定分支到当前分支$ git branch -d [branch-name]                      # 删除本地分支$ git push origin --delete [branch-name]              # 方法一：删除远程分支$ git branch -dr [remote/branch]                      # 方法二：删除远程分支</code></pre><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><pre><code>$ git checkout [file]                               # 恢复暂存区的指定文件到工作区（注意区别分支操作中得checkout命令）$ git checkout [commit] [file]                      # 恢复某个commit的指定文件到暂存区和工作区$ git checkout .                                   # 恢复暂存区的所有文件到工作区$ git reset [file]                                  # 重置暂存区的指定文件，与最新的commit保持一致，但工作区不变$ git reset --hard                                    # 重置暂存区与工作区，与最新的commit保持一致$ git reset [commit]                               # 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变$ git reset --hard [commit]                          # 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致$ git reset --keep [commit]                           # 重置当前HEAD为指定commit，但保持暂存区和工作区不变$ git revert [commit]                              # 新建一个commit，用来撤销指定commit</code></pre><h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><pre><code>$ git tag                                          # 列出所有tag$ git tag [tag]                                     # 在当前commit新建一个tag$ git tag [tag] [commit]                             # 在指定commit新建一个tag$ git tag -d [tag]                                   # 删除本地tag$ git push origin :refs/tags/[tagName]              # 删除远程tag$ git show [tag]                                      # 查看tag信息$ git push [remote] [tag]                          # 提交指定tag$ git push [remote] --tags                          # 提交所有tag$ git checkout -b [branch] [tag]                   # 新建一个分支，指向某个tag</code></pre><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><pre><code>$ git status                                     # 显示所有变更文件$ git log                                          # 显示当前分支的版本历史$ git log --stat                                 # 显示当前分支的版本历史，以及发生变更的文件$ git blame [file]                                # 显示指定文件是什么人在什么时间修改过$ git log -p [file]                                # 显示指定文件相关的每一次diff$ git diff                                         # 显示暂存区和工作区的差异$ git diff --cached [commit]                    # 显示暂存区和某个commit的差异$ git diff HEAD                                 # 显示工作区与当前分支最新commit之间的差异$ git show [commit]                                # 显示某次提交的元数据和内容变化$ git show --name-only [commit]                    # 显示某次提交发生变化的文件$ git show [commit]:[filename]                    # 显示某次提交时，某个文件的内容$ git reflog                                    # 显示当前分支的最近几次提交</code></pre><h4 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h4><pre><code>$ git fetch [remote]                            # 下载远程仓库的所有变动到暂存区$ git remote -v                                 # 显示所有远程仓库$ git remote show [remote]                        # 显示某个远程仓库的信息$ git remote add [shortname] [url]                # 增加一个新的远程仓库，并命名$ git pull [remote] [branch]                    # 取回远程仓库的变化，并与本地分支合并$ git push [remote] [branch]                    # 上传本地指定分支到远程仓库$ git push [remote] --force                        # 即使有冲突，强行推送当前分支到远程仓库$ git push [remote] --all                        # 推送所有分支到远程仓库</code></pre><h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><p>git的配置文件是.gitconfig，支持全局配置和项目配置，全部配置对所有项目有效，用 <code>--global</code>选择指定。</p><pre><code>$ git config --list                                  #显示配置$ git config -e [--global]                           #编辑(全局)配置文件$ git config [--global] user.name &quot;xx&quot;               #设置 commit 的用户$ git config [--global] user.email &quot;xx@xx.com&quot;       #设置 commit 的邮箱</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;GIT-COMMAND&quot;&gt;&lt;a href=&quot;#GIT-COMMAND&quot; class=&quot;headerlink&quot; title=&quot;GIT COMMAND&quot;&gt;&lt;/a&gt;GIT COMMAND&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本文转自&lt;a href=&quot;https://
      
    
    </summary>
    
    
      <category term="git常用命令  git命令" scheme="http://yoursite.com/tags/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-git%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>python电子书</title>
    <link href="http://yoursite.com/2017/04/08/python%E7%94%B5%E5%AD%90%E4%B9%A6/"/>
    <id>http://yoursite.com/2017/04/08/python电子书/</id>
    <published>2017-04-08T13:56:17.000Z</published>
    <updated>2017-06-28T09:00:44.908Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-电子书"><a href="#python-电子书" class="headerlink" title="python 电子书"></a>python 电子书</h1><hr><p>[TOC]</p><hr><blockquote><p>转自<a href="https://github.com/lzjun567/note/tree/master/note" target="_blank" rel="external">https://github.com/lzjun567/note/tree/master/note</a></p></blockquote><h1 id="电子书"><a href="#电子书" class="headerlink" title="电子书"></a>电子书</h1><p>看到很多朋友经常问Python如何入门，入门之后还是非常迷茫、困惑。笔者有幸从业余的Python新手晋级为Python玩家，谈不上精通，尽管如此我还在不断地学习中。其实学习任何一门语言或者技能，没有什么捷径，无非就是学、实践、学、实践…我最开始触碰Python的动机是出于好奇，接触之后结果发现PYTHON真的非常诱人，开始是在网上看了几篇简单的入门教程，尝到甜头之后，于是在上网搜了一些专业书籍，决定系统的了解这门语言。大概啃了一个星期的书之后，觉得太没意思了，一直沉浸在课本知识中，时间一长，枯燥无比，人的意志力也被掏光了，没法继续往下读了，于是我停了下来，决定拿Python捣鼓点东西，我的第一个demo就是用Python写一个自动定时邮件发送的程序，后来自己搭建BLOG程序，再后来自己写爬虫，写API接口…于是就走到了今天。以下是我在学习过程中看过或者觉得有用的一些教程和书籍。</p><h3 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h3><p>入门的教程就是要直达主题，越简单越好，不要太多的原理性知识，页码不用太厚，涉及的知识点不能往外延伸太广，如果学习一门语言还叫我先把操作系统，计算机原理学完才能看得懂教程的话，就不叫入门教程。</p><h3 id="提高篇"><a href="#提高篇" class="headerlink" title="提高篇"></a>提高篇</h3><p>xxxx</p><h3 id="扩展篇-扩展篇"><a href="#扩展篇-扩展篇" class="headerlink" title="扩展篇###扩展篇"></a>扩展篇###扩展篇</h3><p>xxx</p><ul><li><p><a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="external">小白Python教程</a>，<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">Python3中文教程</a><br><a href="https://github.com/youfou/liaoxuefeng-tutorials" target="_blank" rel="external">电子版</a></p><p>  廖雪峰的小白python教程，有python2和python3两个版本：</p></li><li><p><a href="https://github.com/onion7878/A-Byte-of-Python-CN/tree/master/book" target="_blank" rel="external">简明Python教程</a></p><p>  简明python教程，是《A Byte of Python》的中文版</p></li><li><p><a href="https://www.gitbook.com/book/looly/python-basic/details" target="_blank" rel="external">零基础学Python</a></p><p>  老齐（qiwsir）的Python基础教程Gitbook版</p></li><li><p><a href="http://lovelypython.readthedocs.org/en/latest/" target="_blank" rel="external">可爱的 Python </a></p><p>  大妈（Zoom.Quiet）创意并组建团队，完全由 CPyUG 成员自发组织完成。</p></li><li><a href="http://www.pythondoc.com/pythontutorial27/index.html" target="_blank" rel="external">Python 2.7 官方教程中文版</a></li><li><a href="http://www.pythondoc.com/pythontutorial3/index.html" target="_blank" rel="external">Python 3.3 官方教程中文版</a></li><li><p><a href="https://github.com/yidao620c/python3-cookbook" target="_blank" rel="external">《Python Cookbook》 3rd Edition中文版</a></p><p>  注重实践的一本书，但不适合初学者。</p></li><li><p><a href="http://old.sebug.net/paper/books/dive-into-python3/" target="_blank" rel="external">深入 Python 3</a></p><p>  《dive into python3》的中译版。</p></li><li><a href="https://code.google.com/p/zhong-wiki/wiki/PEP8" target="_blank" rel="external">PEP8 Python代码风格规范</a></li><li><p><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-python-styleguide/" target="_blank" rel="external">Google Python 风格指南 中文版</a> </p><p>  写python的人都应该遵循的原则。</p></li><li><p><a href="http://liam0205.me/2013/11/02/Python-tutorial-zh_cn/" target="_blank" rel="external">Python入门教程</a> (<a href="http://liam0205.me/attachment/Python/The_Python_Tutorial_zh-cn.pdf" target="_blank" rel="external">PDF</a>) </p><p>  Python 官方入门的中文翻译版（主页）。翻译工程属于 O.B.P 计划的一部分，主要翻译者为刘鑫与 DocsPy3zh, 校对为 Zoom.Quiet。</p></li><li><p><a href="http://article.yeeyan.org/view/311527/287706" target="_blank" rel="external">Python的神奇方法指南</a> </p><p>  有关Python内编写类的各种技巧和方法(构建和初始化、重载操作符、类描述、属性访问控制、自定义序列、反射机制、可调用对象、上下文管理、构建描述符对象、Pickling)。你可以把它当作一个教程，进阶，或者使用参考</p></li><li><p><a href="http://old.sebug.net/paper/books/LearnPythonTheHardWay/" target="_blank" rel="external">笨办法学 Python</a> （<a href="http://liam0205.me/attachment/Python/PyHardWay/Learn_Python_The_Hard_Way_zh-cn.pdf" target="_blank" rel="external">PDF</a>版下载）</p><p>  《Learn Python The Hard Way》中译版</p></li><li><a href="https://github.com/qyuhen/book/blob/master/Python%20%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%20%E7%AC%AC%E4%BA%8C%E7%89%88.pdf" target="_blank" rel="external">Python学习笔记</a></li><li><p><a href="https://github.com/wklken/stackoverflow-py-top-qa" target="_blank" rel="external">stackoverflow上Python相关回答整理翻译</a></p><p>  stackoverflow上python相关的热门问题</p></li><li><p><a href="http://pythonguidecn.readthedocs.org/zh/latest/starting/which-python.html#python-2-vs-3" target="_blank" rel="external">Python 指南</a></p><p>  <a href="http://docs.python-guide.org/en/latest/" target="_blank" rel="external">The Hitchhiker’s Guide to Python</a>中文版</p></li><li><a href="http://python.usyiyi.cn/django/index.html" target="_blank" rel="external">Django 1.8.2 文档中文版</a></li><li><a href="https://github.com/yangyubo/zh-django-best-practices/blob/master/readme.rst" target="_blank" rel="external">Django 最佳实践</a></li><li><a href="https://www.gitbook.com/book/andrew-liu/django-blog/details" target="_blank" rel="external">Django搭建简易博客教程</a></li><li><a href="http://djangobook.py3k.cn/2.0/" target="_blank" rel="external">The Django Book 中文版</a></li><li><a href="http://webpy.org/tutorial3.zh-cn" target="_blank" rel="external">web.py 0.3 新手指南</a></li><li><a href="http://webpy.org/cookbook/index.zh-cn" target="_blank" rel="external">Web.py Cookbook 简体中文版</a></li><li><a href="http://docs.jinkan.org/docs/flask/" target="_blank" rel="external">Flask 文档中文版</a></li><li><a href="http://docs.jinkan.org/docs/jinja2/" target="_blank" rel="external">Jinja2 文档中文版</a></li><li><a href="http://werkzeug-docs-cn.readthedocs.org/zh_CN/latest/" target="_blank" rel="external">Werkzeug 文档中文版</a></li><li><a href="http://spacewander.github.io/explore-flask-zh/" target="_blank" rel="external">Flask之旅</a></li><li><a href="http://demo.pythoner.com/itt2zh/index.html" target="_blank" rel="external">Introduction to Tornado 中文翻译</a></li><li><a href="http://pan.baidu.com/s/1qW4pvnY" target="_blank" rel="external">Python自然语言处理中文版</a></li><li><a href="http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/" target="_blank" rel="external">Python 绘图库 matplotlib 官方指南中文翻译</a></li><li><a href="http://scrapy-chs.readthedocs.org/zh_CN/latest/" target="_blank" rel="external">Scrapy 0.25 文档</a></li><li><a href="https://github.com/carfly/thinkpython-cn" target="_blank" rel="external">ThinkPython</a></li><li><a href="http://www.cnblogs.com/vamei/archive/2012/09/13/2682778.html" target="_blank" rel="external">Python快速教程</a></li><li><a href="http://wiki.ubuntu.org.cn/Python正则表达式操作指南" target="_blank" rel="external">Python 正则表达式操作指南</a></li><li><a href="http://www.crifan.com/files/doc/docbook/python_beginner_tutorial/release/html/python_beginner_tutorial.html" target="_blank" rel="external">python初级教程：入门详解</a></li><li><a href="https://www.gitbook.com/book/likebeta/twisted-intro-cn/details" target="_blank" rel="external">Twisted 与异步编程入门</a></li><li><a href="http://textgrocery.readthedocs.org/zh/latest/index.html" target="_blank" rel="external">TextGrocery 中文 API</a> ( 基于svm算法的一个短文本分类 Python 库 )</li><li><a href="http://requests-docs-cn.readthedocs.org/zh_CN/latest/" target="_blank" rel="external">Requests: HTTP for Humans</a></li><li><a href="http://pillow-cn.readthedocs.org/en/latest/#" target="_blank" rel="external">Pillow 中文文档</a></li><li><a href="http://pymotwcn.readthedocs.org/en/latest/index.html" target="_blank" rel="external">PyMOTW 中文版</a></li><li><a href="http://fabric-chs.readthedocs.org" target="_blank" rel="external">Fabric 中文文档</a></li><li><a href="http://www.oschina.net/translate/the-flask-mega-tutorial-part-i-hello-world" target="_blank" rel="external">The Flask Mega-Tutorial 中文</a></li><li><a href="http://www.nowamagic.net/academy/detail/13321002" target="_blank" rel="external">Tornado源码解析</a></li><li><a href="https://tornado-zh.readthedocs.org/zh/latest/" target="_blank" rel="external">Tornado 4.3 文档中文版</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;python-电子书&quot;&gt;&lt;a href=&quot;#python-电子书&quot; class=&quot;headerlink&quot; title=&quot;python 电子书&quot;&gt;&lt;/a&gt;python 电子书&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;转自
      
    
    </summary>
    
    
      <category term="电子书推荐 python" scheme="http://yoursite.com/tags/%E7%94%B5%E5%AD%90%E4%B9%A6%E6%8E%A8%E8%8D%90-python/"/>
    
  </entry>
  
  <entry>
    <title>Gitpages搭建参考</title>
    <link href="http://yoursite.com/2017/04/08/index/"/>
    <id>http://yoursite.com/2017/04/08/index/</id>
    <published>2017-04-08T13:56:17.000Z</published>
    <updated>2017-04-08T14:00:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><hr><h1 id="Gitpages-搭建过程"><a href="#Gitpages-搭建过程" class="headerlink" title="Gitpages 搭建过程"></a>Gitpages 搭建过程</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.jianshu.com/p/985d07d88ef4" target="_blank" rel="external">http://www.jianshu.com/p/985d07d88ef4</a><br><a href="http://www.cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/" target="_blank" rel="external">http://www.cnfeat.com/2014/05/10/2014-05-11-how-to-build-a-blog/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Gitpages-搭建过程&quot;&gt;&lt;a href=&quot;#Gitpages-搭建过程&quot; class=&quot;headerlink&quot; title=&quot;Gitpages 搭建过程&quot;&gt;&lt;/a&gt;Gitpages 搭建过程&lt;/h1&gt;&lt;h2 id=&quot;参考链
      
    
    </summary>
    
    
      <category term="gitpages搭建参考" scheme="http://yoursite.com/tags/gitpages%E6%90%AD%E5%BB%BA%E5%8F%82%E8%80%83/"/>
    
  </entry>
  
</feed>
